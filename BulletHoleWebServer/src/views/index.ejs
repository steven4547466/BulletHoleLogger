<!DOCTYPE html>
<html>

<head>
  <title>Holes</title>
  <link rel="stylesheet" href="./css/bulma.min.css">
  <link rel="stylesheet" type="text/css" href="./css/css.css">
  <script src="./js/p5/p5.min.js"></script>
  <script src="./js/sketch.js"></script>
  <script>
    function onLoad() {
      fetch(window.location.protocol + "//" + window.location.host + "/bullets")
        .then(response => response.json())
        .then(data => {
          let serverSelectorContent = document.getElementById("server-selector-dropdown-content")
          for (let serverNum of Object.keys(data).sort((a, b) => a - b)) {
            let dropdownItemDiv = document.createElement("div")
            dropdownItemDiv.classList.add("dropdown-item", "is-dark")

            let serverDropdown = document.createElement("div")
            serverDropdown.classList.add("dropdown")
            serverDropdown.id = `server-${serverNum}-dropdown`
            dropdownItemDiv.appendChild(serverDropdown)

            let dropdownTrigger = document.createElement("div")
            dropdownTrigger.classList.add("dropdown-trigger")
            serverDropdown.appendChild(dropdownTrigger)

            let button = document.createElement("button")
            button.classList.add("button", "is-dropdown-button")
            button.id = `server-${serverNum}-dropdown-button`
            button.setAttribute("aria-haspopup", true)
            button.setAttribute("aria-controls", "dropdown-menu")
            button.innerHTML = `<span>Server ${serverNum}</span>`
            dropdownTrigger.appendChild(button)

            let dropdownMenu = document.createElement("div")
            dropdownMenu.classList.add("dropdown-menu")
            dropdownMenu.id = `server-${serverNum}-dropdown-menu`
            dropdownMenu.setAttribute("role", "menu")
            serverDropdown.appendChild(dropdownMenu)

            let dropdownContent = document.createElement("div")
            dropdownContent.classList.add("dropdown-content")
            dropdownMenu.appendChild(dropdownContent)

            serverSelectorContent.appendChild(dropdownItemDiv)
          }

          var dropdown = document.querySelector("#server-dropdown-button");
          dropdown.addEventListener("click", function (event) {
            event.stopPropagation();
            document.querySelector("#server-dropdown").classList.toggle("is-active");
          });

          let dropdownContent = document.querySelector("#server-dropdown").querySelector(".dropdown-content").children
          for (let child of dropdownContent) {
            let dropDownServerButton = child.querySelector(".is-dropdown-button")
            // console.log(dropDownServerButton)
            if (dropDownServerButton != null) {
              dropDownServerButton.addEventListener("click", function (event) {
                let serverId = dropDownServerButton.id.match(/\d+/)[0]
                if (document.querySelector(`#server-${serverId}-dropdown`).classList.contains("is-active")) {
                  document.querySelector(`#server-${serverId}-dropdown`).classList.remove("is-active")
                } else {
                  for (let i = 1; i <= dropdownContent.length; i++) {
                    try {
                      if (i == serverId) continue;
                      document.querySelector(`#server-${i}-dropdown`).classList.remove("is-active")
                    } catch (e) { }
                  }
                  document.querySelector(`#server-${serverId}-dropdown`).classList.add("is-active")
                }

                // window.updateP5();
              })
            }
          }

          for (let [serverNum, rounds] of Object.entries(data)) {
            let dropdownContent = document.querySelector(`#server-${serverNum}-dropdown-menu .dropdown-content`)
            for (let roundTimestamp of Object.keys(rounds)) {
              let dropdownItem = document.createElement("div")
              dropdownItem.classList.add("dropdown-item", "is-dark")

              let button = document.createElement("button")
              button.addEventListener("click", () => {
                window.updateP5(serverNum, roundTimestamp)
              })
              button.innerText = new Date(parseInt(roundTimestamp)).toLocaleTimeString("en-US")
              button.classList.add("button")

              dropdownItem.appendChild(button)
              dropdownContent.appendChild(dropdownItem)
            }
          }
        })
    }
  </script>
</head>

<body onload="onLoad()" style="height:200%">
  <div class="columns is-desktop is-centered">
    <div class="column" style="padding:2em;">
      <div class="dropdown" id="server-dropdown">
        <div class="dropdown-trigger">
          <button id="server-dropdown-button" class="button" aria-haspopup="true" aria-controls="dropdown-menu">
            <span>Server Selector</span>
          </button>
        </div>

        <div class="dropdown-menu" id="dropdown-menu" role="menu">
          <div class="dropdown-content" id="server-selector-dropdown-content">

          </div>
        </div>
      </div>
    </div>
    <main class="column">

    </main>
    <div class="column" style="padding:2em;" id="users">
    </div>
  </div>
  <!-- <div class="buttons is-centered">
    <button id="update" class="button is-dark">
      Update
    </button>
  </div> -->
</body>

</html>